{"ast":null,"code":"var _jsxFileName = \"/Users/woonggi/projects/react_tictacktogame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  const getDisplayValue = () => {\n    if (value === \"X\") return \"🐱\";\n    if (value === \"O\") return \"��\";\n    return value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  boardSize,\n  playerNames\n}) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares, boardSize)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares, boardSize);\n  let status;\n  if (winner) {\n    const winnerName = winner === \"X\" ? playerNames.playerX : playerNames.playerO;\n    status = `${winnerName}님이 승리하셨습니다! 🎉`;\n  } else {\n    const currentPlayer = xIsNext ? playerNames.playerX : playerNames.playerO;\n    status = `다음 플레이어: ${currentPlayer} (${xIsNext ? \"X\" : \"O\"})`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: boardSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: Array.from({\n          length: boardSize\n        }, (_, col) => {\n          const index = row * boardSize + col;\n          return /*#__PURE__*/_jsxDEV(Square, {\n            value: squares[index],\n            onSquareClick: () => handleClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(5);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0); // 🔥 현재 턴 추가\n  const [playerNames, setPlayerNames] = useState({\n    playerX: \"플레이어 1\",\n    playerO: \"플레이어 2\"\n  });\n  const [showNameInput, setShowNameInput] = useState(false);\n\n  // 🔥 현재 보드 상태 계산 수정\n  const currentSquares = history[currentMove];\n  function handleNameChange(player, newName) {\n    setPlayerNames(prev => ({\n      ...prev,\n      [player]: newName\n    }));\n  }\n  function toggleNameInput() {\n    setShowNameInput(!showNameInput);\n  }\n  function changeGameMode(newSize) {\n    setBoardSize(newSize);\n    setHistory([Array(newSize * newSize).fill(null)]);\n    setCurrentMove(0); // 🔥 현재 턴 초기화\n    setXIsNext(true);\n  }\n  function handlePlay(nextSquares) {\n    // 🔥 현재 턴 이후의 히스토리 제거\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n  }\n\n  // 🔥 jumpTo 함수 구현\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setXIsNext(nextMove % 2 === 0);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        className: move === currentMove ? 'active' : '' // �� 현재 턴 하이라이트\n        ,\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-settings section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD50C\\uB808\\uC774\\uC5B4 \\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: toggleNameInput,\n        children: showNameInput ? '이름 설정 완료' : '플레이어 이름 변경'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), showNameInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uD50C\\uB808\\uC774\\uC5B4 1 (X): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: playerNames.playerX,\n            onChange: e => handleNameChange('playerX', e.target.value),\n            placeholder: \"\\uD50C\\uB808\\uC774\\uC5B4 1 \\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uD50C\\uB808\\uC774\\uC5B4 2 (O): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: playerNames.playerO,\n            onChange: e => handleNameChange('playerO', e.target.value),\n            placeholder: \"\\uD50C\\uB808\\uC774\\uC5B4 2 \\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-mode-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: boardSize === 5 ? 'active' : '',\n          onClick: () => changeGameMode(5),\n          children: \"\\uC624\\uBAA9 (5x5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: boardSize === 7 ? 'active' : '',\n          onClick: () => changeGameMode(7),\n          children: \"\\uCE60\\uBAA9 (7x7)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: boardSize === 10 ? 'active' : '',\n          onClick: () => changeGameMode(10),\n          children: \"\\uC2ED\\uBAA9 (10x10)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        boardSize: boardSize,\n        playerNames: playerNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"X1M6PIT1BZHt77rR2a/HIwXjvU4=\");\n_c3 = Game;\nfunction calculateWinner(squares, boardSize) {\n  const lines = [];\n\n  // 가로줄\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push(i * boardSize + j);\n    }\n    lines.push(row);\n  }\n\n  // 세로줄\n  for (let j = 0; j < boardSize; j++) {\n    const col = [];\n    for (let i = 0; i < boardSize; i++) {\n      col.push(i * boardSize + j);\n    }\n    lines.push(col);\n  }\n\n  // 대각선\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < boardSize; i++) {\n    diagonal1.push(i * boardSize + i);\n    diagonal2.push(i * boardSize + (boardSize - 1 - i));\n  }\n  lines.push(diagonal1, diagonal2);\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const firstSquare = squares[line[0]];\n    if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n      return firstSquare;\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Square","value","onSquareClick","getDisplayValue","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","boardSize","playerNames","handleClick","i","calculateWinner","nextSquares","slice","winner","status","winnerName","playerX","playerO","currentPlayer","Array","from","length","_","row","col","index","_c2","Game","_s","setXIsNext","setBoardSize","history","setHistory","fill","currentMove","setCurrentMove","setPlayerNames","showNameInput","setShowNameInput","currentSquares","handleNameChange","player","newName","prev","toggleNameInput","changeGameMode","newSize","handlePlay","nextHistory","jumpTo","nextMove","moves","map","move","description","type","onChange","e","target","placeholder","_c3","lines","j","push","diagonal1","diagonal2","line","firstSquare","every","$RefreshReg$"],"sources":["/Users/woonggi/projects/react_tictacktogame/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  const getDisplayValue = () => {\n    if (value === \"X\") return \"🐱\";\n    if (value === \"O\") return \"��\";\n    return value;\n  };\n  \n  return(\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ xIsNext, squares, onPlay, boardSize, playerNames }) {\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares, boardSize)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares, boardSize);\n  let status;\n  if (winner) {\n    const winnerName = winner === \"X\" ? playerNames.playerX : playerNames.playerO;\n    status = `${winnerName}님이 승리하셨습니다! 🎉`;\n  } else {\n    const currentPlayer = xIsNext ? playerNames.playerX : playerNames.playerO;\n    status = `다음 플레이어: ${currentPlayer} (${xIsNext ? \"X\" : \"O\"})`;\n  }\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board\">\n        {Array.from({length: boardSize}, (_, row) => (\n          <div key={row} className=\"board-row\">\n            {Array.from({length: boardSize}, (_, col) => {\n              const index = row * boardSize + col;\n              return (\n                <Square \n                  key={index}\n                  value={squares[index]} \n                  onSquareClick={() => handleClick(index)} \n                />\n              );\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default function Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(5);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0); // 🔥 현재 턴 추가\n  const [playerNames, setPlayerNames] = useState({ playerX: \"플레이어 1\", playerO: \"플레이어 2\" });\n  const [showNameInput, setShowNameInput] = useState(false);\n  \n  // 🔥 현재 보드 상태 계산 수정\n  const currentSquares = history[currentMove];\n\n  function handleNameChange(player, newName) {\n    setPlayerNames(prev => ({\n      ...prev,\n      [player]: newName\n    }));\n  }\n\n  function toggleNameInput() {\n    setShowNameInput(!showNameInput);\n  }\n\n  function changeGameMode(newSize) {\n    setBoardSize(newSize);\n    setHistory([Array(newSize * newSize).fill(null)]);\n    setCurrentMove(0); // 🔥 현재 턴 초기화\n    setXIsNext(true);\n  }\n\n  function handlePlay(nextSquares) {\n    // 🔥 현재 턴 이후의 히스토리 제거\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXIsNext(!xIsNext);\n  }\n\n  // 🔥 jumpTo 함수 구현\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setXIsNext(nextMove % 2 === 0);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button \n          onClick={() => jumpTo(move)}\n          className={move === currentMove ? 'active' : ''} // �� 현재 턴 하이라이트\n        >\n          {description}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"player-settings section\">\n        <h3>플레이어 설정</h3>\n        <button className=\"btn\" onClick={toggleNameInput}>\n          {showNameInput ? '이름 설정 완료' : '플레이어 이름 변경'}\n        </button>\n        \n        {showNameInput && (\n          <div className=\"name-inputs\">\n            <div>\n              <label>플레이어 1 (X): </label>\n              <input \n                type=\"text\" \n                value={playerNames.playerX}\n                onChange={(e) => handleNameChange('playerX', e.target.value)}\n                placeholder=\"플레이어 1 이름\"\n              />\n            </div>\n            <div>\n              <label>플레이어 2 (O): </label>\n              <input \n                type=\"text\" \n                value={playerNames.playerO}\n                onChange={(e) => handleNameChange('playerO', e.target.value)}\n                placeholder=\"플레이어 2 이름\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"game-mode-selector\">\n        <div className=\"button-group\">\n          <button className={boardSize === 5 ? 'active' : ''} onClick={() => changeGameMode(5)}>\n            오목 (5x5)\n          </button>\n          <button className={boardSize === 7 ? 'active' : ''} onClick={() => changeGameMode(7)}>\n            칠목 (7x7)\n          </button>\n          <button className={boardSize === 10 ? 'active' : ''} onClick={() => changeGameMode(10)}>\n            십목 (10x10)\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"section game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} boardSize={boardSize} playerNames={playerNames} />\n      </div>\n      <div className=\"section game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction calculateWinner(squares, boardSize) {\n  const lines = [];\n  \n  // 가로줄\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push(i * boardSize + j);\n    }\n    lines.push(row);\n  }\n  \n  // 세로줄\n  for (let j = 0; j < boardSize; j++) {\n    const col = [];\n    for (let i = 0; i < boardSize; i++) {\n      col.push(i * boardSize + j);\n    }\n    lines.push(col);\n  }\n  \n  // 대각선\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < boardSize; i++) {\n    diagonal1.push(i * boardSize + i);\n    diagonal2.push(i * boardSize + (boardSize - 1 - i));\n  }\n  lines.push(diagonal1, diagonal2);\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const firstSquare = squares[line[0]];\n    \n    if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n      return firstSquare;\n    }\n  }\n  \n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}