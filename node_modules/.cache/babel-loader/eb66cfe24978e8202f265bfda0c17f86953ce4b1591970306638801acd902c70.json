{"ast":null,"code":"var _jsxFileName = \"/Users/woonggi/projects/react_tictacktogame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  // const [value, setValue] = useState(null);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// State 끌어올리기부터!\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  boardSize\n}) {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares, boardSize)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n  }\n  const winner = calculateWinner(squares, boardSize);\n  let status;\n  if (winner) {\n    status = \"Winner : \" + winner;\n  } else {\n    status = \"Next Player : \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: boardSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: Array.from({\n          length: boardSize\n        }, (_, col) => {\n          const index = row * boardSize + col;\n          return /*#__PURE__*/_jsxDEV(Square, {\n            value: squares[index],\n            onSquareClick: () => handleClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(5);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const currentSquares = history[history.length - 1];\n  function changeGameMode(newSize) {\n    setBoardSize(newSize);\n    setHistory([Array(newSize * newSize).fill(null)]);\n    setXIsNext(true);\n  }\n  function handlePlay(nextSquares) {\n    setHistory([...history, nextSquares]);\n    setXIsNext(!xIsNext);\n  }\n  function jumpTo(nextMove) {\n    //todo\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC8C\\uC784 \\uBAA8\\uB4DC \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: boardSize === 5 ? 'active' : '',\n        onClick: () => changeGameMode(5),\n        children: \"\\uC624\\uBAA9 (5x5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: boardSize === 7 ? 'active' : '',\n        onClick: () => changeGameMode(7),\n        children: \"\\uCE60\\uBAA9 (7x7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: boardSize === 10 ? 'active' : '',\n        onClick: () => changeGameMode(10),\n        children: \"\\uC2ED\\uBAA9 (10x10)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3, 4],\n//     [5, 6, 7, 8, 9],\n//     [10, 11, 12, 13, 14],\n//     [15, 16, 17, 18, 19],\n//     [20, 21, 22, 23, 24],\n//     [0, 5, 10, 15, 20],\n//     [1, 6, 11, 16, 21],\n//     [2, 7, 12, 17, 22],\n//     [3, 8, 13, 18, 23],\n//     [4, 9, 14, 19, 24],\n//     [0, 6, 12, 18, 24],\n//     [4, 8, 12, 16, 20]\n//   ];\n_s(Game, \"cbYRaeGlXfdwvfUXDFvxTuD0XRE=\");\n_c3 = Game;\nfunction calculateWinner(squares, boardSize) {\n  const lines = [];\n\n  // 가로줄\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push(i * boardSize + j);\n    }\n    lines.push(row);\n  }\n\n  // 세로줄\n  for (let j = 0; j < boardSize; j++) {\n    const col = [];\n    for (let i = 0; i < boardSize; i++) {\n      col.push(i * boardSize + j);\n    }\n    lines.push(col);\n  }\n\n  // 대각선\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < boardSize; i++) {\n    diagonal1.push(i * boardSize + i); // 왼쪽 위 → 오른쪽 아래\n    diagonal2.push(i * boardSize + (boardSize - 1 - i)); // 오른쪽 위 → 왼쪽 아래\n  }\n  lines.push(diagonal1, diagonal2);\n\n  // for (let i = 0; i < lines.length; i++ ) {\n  //   const [a, b, c, d, e] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n  //     return squares[a];\n  //   }\n  // }\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const firstSquare = squares[line[0]];\n    if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n      return firstSquare;\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","boardSize","handleClick","i","calculateWinner","nextSquares","slice","winner","status","Array","from","length","_","row","col","index","_c2","Game","_s","setXIsNext","setBoardSize","history","setHistory","fill","currentSquares","changeGameMode","newSize","handlePlay","jumpTo","nextMove","moves","map","move","description","_c3","lines","j","push","diagonal1","diagonal2","line","firstSquare","every","$RefreshReg$"],"sources":["/Users/woonggi/projects/react_tictacktogame/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  // const [value, setValue] = useState(null);\n\n  \n  return(\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// State 끌어올리기부터!\n\nfunction Board({ xIsNext, squares, onPlay, boardSize }) {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares, boardSize)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n  }\n\n  const winner = calculateWinner(squares, boardSize);\n  let status;\n  if (winner) {\n    status = \"Winner : \" + winner;\n  } else {\n    status = \"Next Player : \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n    <div>\n  <div className=\"status\">{status}</div>\n  <div className=\"board\">\n    {Array.from({length: boardSize}, (_, row) => (\n      <div key={row} className=\"board-row\">\n        {Array.from({length: boardSize}, (_, col) => {\n          const index = row * boardSize + col;\n          return (\n            <Square \n              key={index}\n              value={squares[index]} \n              onSquareClick={() => handleClick(index)} \n            />\n          );\n        })}\n      </div>\n    ))}\n  </div>\n</div>\n  );\n}\n\nexport default function Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(5);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const currentSquares = history[history.length - 1];\n\n  function changeGameMode(newSize) {\n    setBoardSize(newSize);\n    setHistory([Array(newSize * newSize).fill(null)]);\n    setXIsNext(true);\n  }\n\n  function handlePlay(nextSquares) {\n    setHistory([...history, nextSquares]);\n    setXIsNext(!xIsNext);\n  }\n\n  function jumpTo(nextMove) {\n    //todo\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-mode-selector\">\n        <h3>게임 모드 선택:</h3>\n        <button \n          className={boardSize === 5 ? 'active' : ''} \n          onClick={() => changeGameMode(5)}\n        >\n          오목 (5x5)\n        </button>\n        <button \n          className={boardSize === 7 ? 'active' : ''} \n          onClick={() => changeGameMode(7)}\n        >\n          칠목 (7x7)\n        </button>\n        <button \n          className={boardSize === 10 ? 'active' : ''} \n          onClick={() => changeGameMode(10)}\n        >\n          십목 (10x10)\n        </button>\n      </div>\n\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3, 4],\n//     [5, 6, 7, 8, 9],\n//     [10, 11, 12, 13, 14],\n//     [15, 16, 17, 18, 19],\n//     [20, 21, 22, 23, 24],\n//     [0, 5, 10, 15, 20],\n//     [1, 6, 11, 16, 21],\n//     [2, 7, 12, 17, 22],\n//     [3, 8, 13, 18, 23],\n//     [4, 9, 14, 19, 24],\n//     [0, 6, 12, 18, 24],\n//     [4, 8, 12, 16, 20]\n//   ];\n\nfunction calculateWinner(squares, boardSize) {\n  const lines = [];\n  \n  // 가로줄\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push(i * boardSize + j);\n    }\n    lines.push(row);\n  }\n  \n  // 세로줄\n  for (let j = 0; j < boardSize; j++) {\n    const col = [];\n    for (let i = 0; i < boardSize; i++) {\n      col.push(i * boardSize + j);\n    }\n    lines.push(col);\n  }\n  \n  // 대각선\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < boardSize; i++) {\n    diagonal1.push(i * boardSize + i);           // 왼쪽 위 → 오른쪽 아래\n    diagonal2.push(i * boardSize + (boardSize - 1 - i)); // 오른쪽 위 → 왼쪽 아래\n  }\n  lines.push(diagonal1, diagonal2);\n\n\n  // for (let i = 0; i < lines.length; i++ ) {\n  //   const [a, b, c, d, e] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n  //     return squares[a];\n  //   }\n  // }\n  for (let i = 0; i < lines.length; i++) {\n  const line = lines[i];\n  const firstSquare = squares[line[0]];\n  \n  if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n    return firstSquare;\n  }\n  \n}\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}