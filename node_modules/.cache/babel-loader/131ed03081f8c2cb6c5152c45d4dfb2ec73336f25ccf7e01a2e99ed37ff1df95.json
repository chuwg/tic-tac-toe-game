{"ast":null,"code":"var _jsxFileName = \"/Users/woonggi/projects/react_tictacktogame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  // const [value, setValue] = useState(null);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// State 끌어올리기부터!\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n  }\n  const boardSize = 10;\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner : \" + winner;\n  } else {\n    status = \"Next Player : \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status\",\n    children: [status, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: boardSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: Array.from({\n          length: boardSize\n        }, (_, col) => {\n          const index = row * boardSize + col;\n          return /*#__PURE__*/_jsxDEV(Square, {\n            value: squares[index],\n            onSquareClick: () => handleClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const currentSquares = history[history.length - 1];\n  function handlePlay(nextSquares) {\n    setHistory([...history, nextSquares]);\n    setXIsNext(!xIsNext);\n  }\n  function jumpTo(nextMove) {\n    //todo\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3, 4],\n//     [5, 6, 7, 8, 9],\n//     [10, 11, 12, 13, 14],\n//     [15, 16, 17, 18, 19],\n//     [20, 21, 22, 23, 24],\n//     [0, 5, 10, 15, 20],\n//     [1, 6, 11, 16, 21],\n//     [2, 7, 12, 17, 22],\n//     [3, 8, 13, 18, 23],\n//     [4, 9, 14, 19, 24],\n//     [0, 6, 12, 18, 24],\n//     [4, 8, 12, 16, 20]\n//   ];\n_s(Game, \"kyn1Tt3W43JjxeP/kKYvSwscnYA=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const size = 10; // 5x5 보드\n  const lines = [];\n\n  // 가로줄\n  for (let i = 0; i < size; i++) {\n    const row = [];\n    for (let j = 0; j < size; j++) {\n      row.push(i * size + j);\n    }\n    lines.push(row);\n  }\n\n  // 세로줄\n  for (let j = 0; j < size; j++) {\n    const col = [];\n    for (let i = 0; i < size; i++) {\n      col.push(i * size + j);\n    }\n    lines.push(col);\n  }\n\n  // 대각선\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < size; i++) {\n    diagonal1.push(i * size + i); // 왼쪽 위 → 오른쪽 아래\n    diagonal2.push(i * size + (size - 1 - i)); // 오른쪽 위 → 왼쪽 아래\n  }\n  lines.push(diagonal1, diagonal2);\n\n  // for (let i = 0; i < lines.length; i++ ) {\n  //   const [a, b, c, d, e] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n  //     return squares[a];\n  //   }\n  // }\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const firstSquare = squares[line[0]];\n    if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n      return firstSquare;\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","boardSize","winner","status","Array","from","length","_","row","col","index","_c2","Game","_s","setXIsNext","history","setHistory","fill","currentSquares","handlePlay","jumpTo","nextMove","moves","map","move","description","_c3","size","lines","j","push","diagonal1","diagonal2","line","firstSquare","every","$RefreshReg$"],"sources":["/Users/woonggi/projects/react_tictacktogame/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  // const [value, setValue] = useState(null);\n\n  \n  return(\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// State 끌어올리기부터!\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n  }\n  const boardSize = 10;\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner : \" + winner;\n  } else {\n    status = \"Next Player : \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return (\n  <div className=\"status\">{status}\n  <div className=\"board\">\n    {Array.from({length: boardSize}, (_, row) => (\n      <div key={row} className=\"board-row\">\n        {Array.from({length: boardSize}, (_, col) => {\n          const index = row * boardSize + col;\n          return (\n            <Square \n              key={index}\n              value={squares[index]} \n              onSquareClick={() => handleClick(index)} \n            />\n          );\n        })}\n      </div>\n    ))}\n  </div>\n</div>\n  );\n}\n\nexport default function Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const currentSquares = history[history.length - 1];\n\n  function handlePlay(nextSquares) {\n    setHistory([...history, nextSquares]);\n    setXIsNext(!xIsNext);\n  }\n\n  function jumpTo(nextMove) {\n    //todo\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3, 4],\n//     [5, 6, 7, 8, 9],\n//     [10, 11, 12, 13, 14],\n//     [15, 16, 17, 18, 19],\n//     [20, 21, 22, 23, 24],\n//     [0, 5, 10, 15, 20],\n//     [1, 6, 11, 16, 21],\n//     [2, 7, 12, 17, 22],\n//     [3, 8, 13, 18, 23],\n//     [4, 9, 14, 19, 24],\n//     [0, 6, 12, 18, 24],\n//     [4, 8, 12, 16, 20]\n//   ];\n\nfunction calculateWinner(squares) {\n  const size = 10; // 5x5 보드\n  const lines = [];\n  \n  // 가로줄\n  for (let i = 0; i < size; i++) {\n    const row = [];\n    for (let j = 0; j < size; j++) {\n      row.push(i * size + j);\n    }\n    lines.push(row);\n  }\n  \n  // 세로줄\n  for (let j = 0; j < size; j++) {\n    const col = [];\n    for (let i = 0; i < size; i++) {\n      col.push(i * size + j);\n    }\n    lines.push(col);\n  }\n  \n  // 대각선\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < size; i++) {\n    diagonal1.push(i * size + i);           // 왼쪽 위 → 오른쪽 아래\n    diagonal2.push(i * size + (size - 1 - i)); // 오른쪽 위 → 왼쪽 아래\n  }\n  lines.push(diagonal1, diagonal2);\n\n\n  // for (let i = 0; i < lines.length; i++ ) {\n  //   const [a, b, c, d, e] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n  //     return squares[a];\n  //   }\n  // }\n  for (let i = 0; i < lines.length; i++) {\n  const line = lines[i];\n  const firstSquare = squares[line[0]];\n  \n  if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n    return firstSquare;\n  }\n  \n}\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}