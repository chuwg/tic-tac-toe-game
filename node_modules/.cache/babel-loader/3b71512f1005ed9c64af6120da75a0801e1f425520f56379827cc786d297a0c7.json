{"ast":null,"code":"var _jsxFileName = \"/Users/woonggi/projects/react_tictacktogame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  // const [value, setValue] = useState(null);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// State ÎÅåÏñ¥Ïò¨Î¶¨Í∏∞Î∂ÄÌÑ∞!\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  boardSize,\n  playerNames\n}) {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares, boardSize)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n  }\n  const winner = calculateWinner(squares, boardSize);\n  let status;\n  if (winner) {\n    const winnerName = winner === \"X\" ? playerNames.playerX : playerNames.playerO;\n    status = `${winnerName}ÎãòÏù¥ ÏäπÎ¶¨ÌïòÏÖ®ÏäµÎãàÎã§! üéâ`;\n  } else {\n    const currentPlayer = xIsNext ? playerNames.playerX : playerNames.playerO;\n    status = `Îã§Ïùå ÌîåÎ†àÏù¥Ïñ¥: ${currentPlayer} (${xIsNext ? \"X\" : \"O\"})`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array.from({\n        length: boardSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: Array.from({\n          length: boardSize\n        }, (_, col) => {\n          const index = row * boardSize + col;\n          return /*#__PURE__*/_jsxDEV(Square, {\n            value: squares[index],\n            onSquareClick: () => handleClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(5);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const [playerNames, setPlayerNames] = useState({\n    playerX: \"ÌîåÎ†àÏù¥Ïñ¥ 1\",\n    playerO: \"ÌîåÎ†àÏù¥Ïñ¥ 2\"\n  });\n  const [showNameInput, setShowNameInput] = useState(false);\n  const currentSquares = history[history.length - 1];\n  function changeGameMode(newSize) {\n    setBoardSize(newSize);\n    setHistory([Array(newSize * newSize).fill(null)]);\n    setXIsNext(true);\n  }\n  function handlePlay(nextSquares) {\n    setHistory([...history, nextSquares]);\n    setXIsNext(!xIsNext);\n  }\n  function jumpTo(nextMove) {\n    //todo\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC8C\\uC784 \\uBAA8\\uB4DC \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: boardSize === 5 ? 'active' : '',\n        onClick: () => changeGameMode(5),\n        children: \"\\uC624\\uBAA9 (5x5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: boardSize === 7 ? 'active' : '',\n        onClick: () => changeGameMode(7),\n        children: \"\\uCE60\\uBAA9 (7x7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: boardSize === 10 ? 'active' : '',\n        onClick: () => changeGameMode(10),\n        children: \"\\uC2ED\\uBAA9 (10x10)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        boardSize: boardSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3, 4],\n//     [5, 6, 7, 8, 9],\n//     [10, 11, 12, 13, 14],\n//     [15, 16, 17, 18, 19],\n//     [20, 21, 22, 23, 24],\n//     [0, 5, 10, 15, 20],\n//     [1, 6, 11, 16, 21],\n//     [2, 7, 12, 17, 22],\n//     [3, 8, 13, 18, 23],\n//     [4, 9, 14, 19, 24],\n//     [0, 6, 12, 18, 24],\n//     [4, 8, 12, 16, 20]\n//   ];\n_s(Game, \"MVpYpP4/rdLDWs4ql+Ai5cQ2PEA=\");\n_c3 = Game;\nfunction calculateWinner(squares, boardSize) {\n  const lines = [];\n\n  // Í∞ÄÎ°úÏ§Ñ\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push(i * boardSize + j);\n    }\n    lines.push(row);\n  }\n\n  // ÏÑ∏Î°úÏ§Ñ\n  for (let j = 0; j < boardSize; j++) {\n    const col = [];\n    for (let i = 0; i < boardSize; i++) {\n      col.push(i * boardSize + j);\n    }\n    lines.push(col);\n  }\n\n  // ÎåÄÍ∞ÅÏÑ†\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < boardSize; i++) {\n    diagonal1.push(i * boardSize + i); // ÏôºÏ™Ω ÏúÑ ‚Üí Ïò§Î•∏Ï™Ω ÏïÑÎûò\n    diagonal2.push(i * boardSize + (boardSize - 1 - i)); // Ïò§Î•∏Ï™Ω ÏúÑ ‚Üí ÏôºÏ™Ω ÏïÑÎûò\n  }\n  lines.push(diagonal1, diagonal2);\n\n  // for (let i = 0; i < lines.length; i++ ) {\n  //   const [a, b, c, d, e] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n  //     return squares[a];\n  //   }\n  // }\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const firstSquare = squares[line[0]];\n    if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n      return firstSquare;\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","boardSize","playerNames","handleClick","i","calculateWinner","nextSquares","slice","winner","status","winnerName","playerX","playerO","currentPlayer","Array","from","length","_","row","col","index","_c2","Game","_s","setXIsNext","setBoardSize","history","setHistory","fill","setPlayerNames","showNameInput","setShowNameInput","currentSquares","changeGameMode","newSize","handlePlay","jumpTo","nextMove","moves","map","move","description","_c3","lines","j","push","diagonal1","diagonal2","line","firstSquare","every","$RefreshReg$"],"sources":["/Users/woonggi/projects/react_tictacktogame/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({ value, onSquareClick }) {\n  // const [value, setValue] = useState(null);\n\n  \n  return(\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// State ÎÅåÏñ¥Ïò¨Î¶¨Í∏∞Î∂ÄÌÑ∞!\n\nfunction Board({ xIsNext, squares, onPlay, boardSize, playerNames }) {\n  // const [xIsNext, setXIsNext] = useState(true);\n  // const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares, boardSize)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n    // setSquares(nextSquares);\n    // setXIsNext(!xIsNext);\n  }\n\n  const winner = calculateWinner(squares, boardSize);\n  let status;\n  if (winner) {\n    const winnerName = winner === \"X\" ? playerNames.playerX : playerNames.playerO;\n    status = `${winnerName}ÎãòÏù¥ ÏäπÎ¶¨ÌïòÏÖ®ÏäµÎãàÎã§! üéâ`;\n  } else {\n    const currentPlayer = xIsNext ? playerNames.playerX : playerNames.playerO;\n    status = `Îã§Ïùå ÌîåÎ†àÏù¥Ïñ¥: ${currentPlayer} (${xIsNext ? \"X\" : \"O\"})`;\n  }\n\n  return (\n    <div>\n  <div className=\"status\">{status}</div>\n  <div className=\"board\">\n    {Array.from({length: boardSize}, (_, row) => (\n      <div key={row} className=\"board-row\">\n        {Array.from({length: boardSize}, (_, col) => {\n          const index = row * boardSize + col;\n          return (\n            <Square \n              key={index}\n              value={squares[index]} \n              onSquareClick={() => handleClick(index)} \n            />\n          );\n        })}\n      </div>\n    ))}\n  </div>\n</div>\n  );\n}\n\nexport default function Game() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [boardSize, setBoardSize] = useState(5);\n  const [history, setHistory] = useState([Array(25).fill(null)]);\n  const [playerNames, setPlayerNames] = useState({ playerX: \"ÌîåÎ†àÏù¥Ïñ¥ 1\", playerO: \"ÌîåÎ†àÏù¥Ïñ¥ 2\" });\n  const [showNameInput, setShowNameInput] = useState(false);\n  const currentSquares = history[history.length - 1];\n\n  function changeGameMode(newSize) {\n    setBoardSize(newSize);\n    setHistory([Array(newSize * newSize).fill(null)]);\n    setXIsNext(true);\n  }\n\n  function handlePlay(nextSquares) {\n    setHistory([...history, nextSquares]);\n    setXIsNext(!xIsNext);\n  }\n\n  function jumpTo(nextMove) {\n    //todo\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = 'Go to move #' + move;\n    } else {\n      description = 'Go to game start';\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-mode-selector\">\n        <h3>Í≤åÏûÑ Î™®Îìú ÏÑ†ÌÉù:</h3>\n        <button \n          className={boardSize === 5 ? 'active' : ''} \n          onClick={() => changeGameMode(5)}\n        >\n          Ïò§Î™© (5x5)\n        </button>\n        <button \n          className={boardSize === 7 ? 'active' : ''} \n          onClick={() => changeGameMode(7)}\n        >\n          Ïπ†Î™© (7x7)\n        </button>\n        <button \n          className={boardSize === 10 ? 'active' : ''} \n          onClick={() => changeGameMode(10)}\n        >\n          Ïã≠Î™© (10x10)\n        </button>\n      </div>\n\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} boardSize={boardSize} />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2, 3, 4],\n//     [5, 6, 7, 8, 9],\n//     [10, 11, 12, 13, 14],\n//     [15, 16, 17, 18, 19],\n//     [20, 21, 22, 23, 24],\n//     [0, 5, 10, 15, 20],\n//     [1, 6, 11, 16, 21],\n//     [2, 7, 12, 17, 22],\n//     [3, 8, 13, 18, 23],\n//     [4, 9, 14, 19, 24],\n//     [0, 6, 12, 18, 24],\n//     [4, 8, 12, 16, 20]\n//   ];\n\nfunction calculateWinner(squares, boardSize) {\n  const lines = [];\n  \n  // Í∞ÄÎ°úÏ§Ñ\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    for (let j = 0; j < boardSize; j++) {\n      row.push(i * boardSize + j);\n    }\n    lines.push(row);\n  }\n  \n  // ÏÑ∏Î°úÏ§Ñ\n  for (let j = 0; j < boardSize; j++) {\n    const col = [];\n    for (let i = 0; i < boardSize; i++) {\n      col.push(i * boardSize + j);\n    }\n    lines.push(col);\n  }\n  \n  // ÎåÄÍ∞ÅÏÑ†\n  const diagonal1 = [];\n  const diagonal2 = [];\n  for (let i = 0; i < boardSize; i++) {\n    diagonal1.push(i * boardSize + i);           // ÏôºÏ™Ω ÏúÑ ‚Üí Ïò§Î•∏Ï™Ω ÏïÑÎûò\n    diagonal2.push(i * boardSize + (boardSize - 1 - i)); // Ïò§Î•∏Ï™Ω ÏúÑ ‚Üí ÏôºÏ™Ω ÏïÑÎûò\n  }\n  lines.push(diagonal1, diagonal2);\n\n\n  // for (let i = 0; i < lines.length; i++ ) {\n  //   const [a, b, c, d, e] = lines[i];\n  //   if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n  //     return squares[a];\n  //   }\n  // }\n  for (let i = 0; i < lines.length; i++) {\n  const line = lines[i];\n  const firstSquare = squares[line[0]];\n  \n  if (firstSquare && line.every(index => squares[index] === firstSquare)) {\n    return firstSquare;\n  }\n  \n}\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}